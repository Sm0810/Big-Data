# -*- coding: utf-8 -*-
"""SMForest.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1MPsPnwldNlI86gf618DeLRQOBFdCWh7R
"""

import pandas as pd ## for working with data.
import numpy as np ## for Linear Algebra.
import plotly.express as px ## Visualization
import plotly.graph_objects as go ## Again, Visualization
import matplotlib.pyplot as plt ## Again, Visualization
pd.set_option('display.max_rows',200)
import os ## data processing, CSV file I/O (e.g. pd.read_csv)
import warnings
warnings.filterwarnings('ignore') ## I hate warnings.
import seaborn as sns

df = pd.read_csv('forestfire.csv')
df.head()

sns.histplot(x=df['2009-10'])
plt.title('2009-10')
plt.show

df['2008-09'].plot(kind='hist',bins=20,title='2008-09')

df.isnull().sum()

df.columns

sns.histplot(x=df['2009-10'])
plt.title('states and year')
plt.show

df.plot(kind='scatter',x='2009-10',y='2008-09',s=32,alpha=.8)
plt.gca().spines[['top','right',]].set_visible(False)

df.plot(kind='scatter',x='2010-2011',y='2009-10',s=32,alpha=.8)

df['2010-2011'].plot(kind='line',figsize=(8,4),title='2010-2011')

px.bar(df,'States/UTs',color='2009-10',title='Total Forest Fires by State')

sns.scatterplot(data=df,y='States/UTs',x='2008-09')
plt.show()

df.isnull().sum()

df.head()

df.shape

df.head()

firstdf = df[['2008-09', 'States/UTs', 'Percent_first', 'Percent_second']]
firstdf.loc[:,'Year'] = '2008-09'
firstdf.columns = ['No_Fires', 'States/UTs', 'Percent_first', 'Percent_second', 'Year']

second = df[['2009-10', 'States/UTs', 'Percent_first', 'Percent_second']]
second.loc[:,'Year'] = '2009-10'
second.columns = ['No_Fires', 'States/UTs', 'Percent_first', 'Percent_second', 'Year']

third = df[['2010-2011', 'States/UTs', 'Percent_first', 'Percent_second']]
third.loc[:,'Year'] = '2010-11'
third.columns = ['No_Fires', 'States/UTs', 'Percent_first', 'Percent_second', 'Year']

df1 = pd.concat([firstdf,second,third])

df1.shape

df1.tail()

px.bar(df1, 'States/UTs', 'No_Fires', color='Year', title='Total Forest Fires by State')

px.line(df1, 'States/UTs', 'No_Fires', color='Year', title='Fires in States throughout Years')

temp = df1.groupby(by='States/UTs')['No_Fires'].sum().sort_values().reset_index()
px.bar(temp.tail(), 'States/UTs', 'No_Fires', color='No_Fires', title = 'states with most recorded forest fires')

temp.head()

temp = df1[df1['Year']=='2008-09'].sort_values(by='No_Fires')
px.bar(temp.tail(), 'States/UTs', 'No_Fires', title = 'Year : 2008-09')

temp = df1[df1['Year']=='2009-10'].sort_values(by='No_Fires')
px.bar(temp.tail(), 'States/UTs', 'No_Fires', title = 'Year : 2009-10')

temp = df1[df1['Year']=='2010-11'].sort_values(by='No_Fires')
px.bar(temp.tail(), 'States/UTs', 'No_Fires', title = 'Year : 2010-11')

temp = df1.groupby(by='Year')['No_Fires'].sum()
fig = go.Figure(data=[go.Pie(labels=temp.index, values=temp.values)])
fig.update_traces(marker=dict(line=dict(color='#000000', width=4)))
fig.show()

temp=df1.sort_values(by='Percent_first')
px.bar(temp, 'States/UTs', 'Percent_first', color='Percent_first', title = 'First Year')